import { NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ConditionalLayout from "./ConditionalLayout";
import ReduxProvider from "@/redux/ReduxProvider";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "BrainSpace",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: { locale: string }; // Locale is required now
}

export default async function RootLayout({
  children,
  params,
}: RootLayoutProps) {
  const { locale } = await params;
  const isRtl = locale === "ar";

  let messages;
  try {
    messages = (await import(`../../../messages/${locale}.json`)).default;
  } catch (error) {
    notFound(); // Trigger 404 if messages are missing
  }

  return (
    <html lang={locale} dir={isRtl ? "rtl" : "ltr"}>
      <head>
        <title>{metadata.title}</title>
        <meta name="description" content={metadata.description} />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages} locale={locale}>
          <ReduxProvider>
           
                <ConditionalLayout locale={locale}>
                  {children}
                </ConditionalLayout>
             
          </ReduxProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
